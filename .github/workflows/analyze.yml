# File: .github/workflows/analyze.yml
name: ECU Analysis
run-name: ECU Analysis • ${{ github.event_name }} • ${{ github.ref_name }} • ${{ github.run_id }}

on:
  push:
    branches: ['**']
  pull_request:
  workflow_dispatch:

jobs:
  build-dev-image:
    name: Build dev container (pre-hook)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.image }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute image tag (lowercase owner)
        id: meta
        shell: bash
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          echo "image=ghcr.io/${OWNER_LC}/eculibre/dev:sha-${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          echo "owner_lc=${OWNER_LC}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx (docker-container driver)
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: image=moby/buildkit:latest

      # --- fix: create docker context on-the-fly if ./docker is missing ---
      - name: Ensure docker context exists
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p docker
          if [[ ! -f docker/Dockerfile ]]; then
            cat > docker/Dockerfile <<'DOCKERFILE'
FROM debian:bookworm-slim

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

RUN apt-get update && apt-get install -y --no-install-recommends \
      bash ca-certificates curl git make coreutils findutils grep sed gawk \
      python3 python3-pip python3-venv \
      jq yq zip unzip \
      binutils srecord \
      shellcheck \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir pyyaml jsonschema

ARG USERNAME=dev
ARG USER_UID=1000
ARG USER_GID=1000
RUN groupadd --gid ${USER_GID} ${USERNAME} \
 && useradd  --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME}

WORKDIR /workspace
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh
USER ${USERNAME}

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["bash"]
DOCKERFILE
          fi

          if [[ ! -f docker/entrypoint.sh ]]; then
            cat > docker/entrypoint.sh <<'SH'
#!/usr/bin/env bash
set -euo pipefail
# If first arg looks like an option, run bash
if [[ "${1:-}" == -* ]]; then exec bash "$@"; fi
# Convenience: eculibre => run repo script if present
if [[ "${1:-}" == "eculibre" && -x "/workspace/eculibre.sh" ]]; then
  shift
  exec /workspace/eculibre.sh "$@"
fi
exec "$@"
SH
            chmod +x docker/entrypoint.sh
          fi

      - name: Build & Push dev image
        uses: docker/build-push-action@v6
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/eculibre/dev:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  repo-checks:
    name: Repo Checks (dev container)
    needs: build-dev-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    container:
      image: ${{ needs.build-dev-image.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Bootstrap (idempotent)
        run: |
          chmod +x ./eculibre.sh || true
          ./eculibre.sh init

      - name: Lint scripts
        run: |
          find scripts -type f -maxdepth 1 -perm -111 -print0 2>/dev/null | xargs -0 -r shellcheck || true
          test -x ./eculibre.sh && shellcheck ./eculibre.sh || true

      - name: Structure check (strict)
        run: ./eculibre.sh check --strict

  codeql:
    name: CodeQL
    needs: repo-checks
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
