# File: .github/workflows/analyze.yml
name: ECU Analysis
run-name: ECU Analysis â€¢ ${{ github.event_name }} â€¢ ${{ github.ref_name }} â€¢ ${{ github.run_id }}

on:
  push:
    branches: ['**']
  pull_request:
  workflow_dispatch:

jobs:
  build-dev-image:
    name: Build dev container (pre-hook)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.image }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute image tag (lowercase owner)
        id: meta
        shell: bash
        run: |
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          echo "image=ghcr.io/${OWNER_LC}/eculibre/dev:sha-${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ðŸ‘‰ Use Buildx with docker-container driver so GHA cache works
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: image=moby/buildkit:latest

      - name: Build & Push dev image
        uses: docker/build-push-action@v6
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.image }}
            ghcr.io/${{ github.repository_owner }}/eculibre/dev:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  repo-checks:
    name: Repo Checks (dev container)
    needs: build-dev-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    container:
      image: ${{ needs.build-dev-image.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Bootstrap (idempotent)
        run: |
          chmod +x ./eculibre.sh || true
          ./eculibre.sh init

      - name: Lint scripts
        run: |
          find scripts -type f -maxdepth 1 -perm -111 -print0 2>/dev/null | xargs -0 -r shellcheck || true
          test -x ./eculibre.sh && shellcheck ./eculibre.sh || true

      - name: Structure check (strict)
        run: ./eculibre.sh check --strict

  codeql:
    name: CodeQL
    needs: repo-checks
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
