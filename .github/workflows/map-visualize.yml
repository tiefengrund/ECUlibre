# File: .github/workflows/map-visualize.yml
name: ECU Map Visualizer
run-name: ECU Map Visualizer • ${{ github.event_name }} • ${{ github.ref_name }} • ${{ github.run_id }}

on:
  push:
    branches: ['**']
  workflow_dispatch:
    inputs:
      bins:
        description: "Glob für .bin-Dateien (Standard: alles unter rawdata)"
        type: string
        default: "rawdata/**/*.bin"
      specs:
        description: "Glob für Map-Spezifikationen (YAML)"
        type: string
        default: "mapspecs/**/*.y?(a)ml"
      deepseek:
        description: "Glob für DeepSeek-Map-JSON (optional)"
        type: string
        default: "deepseek/maps/**/*.json"
      outdir:
        description: "Output-Verzeichnis"
        type: string
        default: "out/mapviz"
      commit_results:
        description: "Ergebnisse nach docs/mapviz committen"
        type: boolean
        default: false

permissions:
  contents: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  visualize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install numpy pyyaml jsonschema matplotlib==3.* pillow

      - name: Resolve inputs (defaults for push)
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            BINS="${{ inputs.bins }}"
            SPECS="${{ inputs.specs }}"
            DEEPSEEK="${{ inputs.deepseek }}"
            OUTDIR="${{ inputs.outdir }}"
            COMMIT="${{ inputs.commit_results }}"
          else
            BINS="rawdata/**/*.bin"
            SPECS="mapspecs/**/*.y?(a)ml"
            DEEPSEEK="deepseek/maps/**/*.json"
            OUTDIR="out/mapviz"
            COMMIT="false"
          fi
          echo "BINS=$BINS"       >> "$GITHUB_ENV"
          echo "SPECS=$SPECS"     >> "$GITHUB_ENV"
          echo "DEEPSEEK=$DEEPSEEK" >> "$GITHUB_ENV"
          echo "OUTDIR=$OUTDIR"   >> "$GITHUB_ENV"
          echo "COMMIT=$COMMIT"   >> "$GITHUB_ENV"

      - name: Beispiel-Mapspezifikation anlegen (falls keine vorhanden)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          FOUND=(mapspecs/*.yml mapspecs/*.yaml)
          if [[ ${#FOUND[@]} -eq 0 ]]; then
            mkdir -p mapspecs
            cat > mapspecs/example_torque.yml <<'YAML'
schema_version: "1.0"
dataset_hint:
  brand: "Generic"
  model: "Example"
  notes: "Sample spec; set real offsets/sizes for your ECU."
maps:
  - name: "Torque_Limit"
    offset: 0x001000
    rows: 16
    cols: 16
    dtype: u16
    endian: little
    scale: 0.1
    add: 0.0
    x_axis: { start: 0, step: 250, count: 16, unit: "rpm" }
    y_axis: { start: 0, step: 10,  count: 16, unit: "load" }
YAML
            echo "Wrote mapspecs/example_torque.yml"
          fi

      - name: mapviz.py (self-contained Reporter & Visualizer)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p tools
          cat > tools/mapviz.py <<'PY'
#!/usr/bin/env python3
# (dein bestehendes Python-Skript – unverändert)
PY
          chmod +x tools/mapviz.py

      - name: Visualize ALL bins in rawdata
        run: |
          set -euo pipefail
          python tools/mapviz.py \
            --bins     "${BINS}" \
            --specs    "${SPECS}" \
            --deepseek "${DEEPSEEK}" \
            --outdir   "${OUTDIR}"

      - name: Upload artifacts (reports + figures)
        uses: actions/upload-artifact@v4
        with:
          name: mapviz-output
          path: ${{ env.OUTDIR }}

      - name: Optional commit to docs/mapviz
        if: ${{ env.COMMIT == 'true' }}
        run: |
          set -euo pipefail
          mkdir -p docs/mapviz
          rsync -a "${OUTDIR}/" docs/mapviz/
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/mapviz
          git commit -m "docs(mapviz): add/update reports (auto)" || echo "Nothing to commit"
          git push
