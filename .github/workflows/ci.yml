name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y shellcheck zip
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema

      - name: Run bootstrap (if present)
        run: |
          set -euo pipefail
          if [ -x scripts/bootstrap_eculibre.sh ]; then
            scripts/bootstrap_eculibre.sh
          else
            echo "bootstrap script not found -> skip"
          fi

      - name: Shell lint (if scripts present)
        run: |
          set -euo pipefail
          if [ -d scripts ]; then
            find scripts -maxdepth 1 -type f -perm -111 -print0 2>/dev/null | xargs -0 -r shellcheck
          else
            echo "no scripts/ dir -> skip shellcheck"
          fi

      - name: Schema validate (if files present)
        run: |
          set -euo pipefail
          if [ -f schemas/metadata.schema.yaml ] && [ -f scripts/validate_metadata.py ]; then
            python scripts/validate_metadata.py
          else
            echo "schema or validator missing -> skip"
          fi

      - name: Repo check (if present)
        run: |
          set -euo pipefail
          if [ -x scripts/check_repo.sh ]; then
            scripts/check_repo.sh
          else
            echo "check_repo.sh not found -> skip"
          fi

      - name: Pack snapshot
        run: |
          set -euo pipefail
          mkdir -p out
          zip -qr out/structure-snapshot.zip rawdata patches schemas docs || true
          echo "CI done" > out/ci.log

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: out

      - name: Prepare Git identity (for push on same repo)
        if: github.event_name == 'push' && github.repository_owner == github.actor
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Commit and push generated changes (best-effort)
        if: github.event_name == 'push' && github.repository_owner == github.actor
        continue-on-error: true
        run: |
          set -euo pipefail
          git checkout "${GITHUB_REF_NAME}"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "ci: update generated files [skip ci]"
          git pull --rebase origin "${GITHUB_REF_NAME}" || true
          git push origin "HEAD:${GITHUB_REF_NAME}" || { echo "Push failed (protected branch or perms). Skipping."; exit 0; }

      - name: Create PR with changes (fallback for forks/protected)
        if: (github.event_name == 'pull_request') || (github.repository_owner != github.actor)
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "ci: update generated files"
          title: "CI: Update generated files"
          body: "Automated update from CI."
          branch: "ci/update-generated-${{ github.run_id }}"
          base: ${{ github.ref_name }}
