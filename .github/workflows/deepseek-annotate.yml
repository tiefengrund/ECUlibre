# File: .github/workflows/deepseek-annotate.yml
name: DeepSeek Annotate

on:
  push:
    branches: ['**']
  workflow_dispatch:
    inputs:
      prompt_mode:
        description: "Use 'text' or 'file'"
        type: choice
        default: text
        options: [text, file]
      prompt_text:
        description: "Text when mode=text"
        type: string
        default: "Summarize the key points."
      prompt_path:
        description: "Repo file when mode=file"
        type: string
        default: "prompt.txt"
      model:
        description: "Model id"
        type: string
        default: "deepseek-chat"
      base_url:
        description: "API base URL"
        type: string
        default: "https://api.deepseek.com"

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  deepseek:
    if: ${{ secrets.DEEPSEEK_API_KEY != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 2 }

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Prepare prompt
        id: prep
        run: |
          set -euo pipefail
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ inputs.prompt_mode }}" == "file" ]]; then
              [[ -f "${{ inputs.prompt_path }}" ]] || { echo "File not found: ${{ inputs.prompt_path }}"; exit 2; }
              PROMPT_JSON=$(python3 - <<'PY' "${{ inputs.prompt_path }}"
import sys,json; print(json.dumps(open(sys.argv[1],'r',encoding='utf-8').read()))
PY
)
            else
              PROMPT_JSON=$(python3 - <<'PY' "${{ inputs.prompt_text }}"
import sys,json; print(json.dumps(sys.argv[1]))
PY
)
            fi
          else
            MSG="$(git log -1 --pretty=%B)"
            DIFF="$(git diff --name-status HEAD~1..HEAD || true)"
            TXT="Summarize this push on branch '${GITHUB_REF_NAME}'. Commit message:
${MSG}

Changed files (name-status):
${DIFF}"
            PROMPT_JSON=$(python3 - <<'PY' "$TXT"
import sys,json; print(json.dumps(sys.argv[1]))
PY
)
          fi
          echo "prompt_json=$PROMPT_JSON" >> "$GITHUB_OUTPUT"

      - name: Call DeepSeek API
        run: |
          set -euo pipefail
          mkdir -p out
          jq -n \
            --arg model "${{ inputs.model || 'deepseek-chat' }}" \
            --argjson prompt "${{ steps.prep.outputs.prompt_json }}" \
            '{
              model: $model,
              messages: [
                {role:"system", content:"You are a concise assistant."},
                {role:"user",   content:$prompt}
              ]
            }' > out/request.json

          curl -fsS "${{ inputs.base_url || 'https://api.deepseek.com' }}/chat/completions" \
            -H "Authorization: Bearer ${{ secrets.DEEPSEEK_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data @out/request.json \
            | tee out/response.json >/dev/null

          jq -r '
            .choices?[0]?.message?.content
            // .data?[0]?.text
            // .output_text
            // .response
            // .
          ' out/response.json > out/response.txt || true

      - name: Comment on PR if available
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('out/response.txt','utf8') || '(empty response)';
            const {owner, repo} = context.repo;
            if (context.eventName === 'pull_request') {
              await github.rest.issues.createComment({owner, repo, issue_number: context.payload.pull_request.number, body: `### DeepSeek Annotation\n\n${body}`});
            } else {
              const branch = context.ref.replace('refs/heads/','');
              const prs = await github.rest.pulls.list({owner, repo, state:'open', head:`${owner}:${branch}`});
              if (prs.data.length) {
                await github.rest.issues.createComment({owner, repo, issue_number: prs.data[0].number, body: `### DeepSeek Annotation\n\n${body}`});
              }
            }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deepseek-output
          path: |
            out/request.json
            out/response.json
            out/response.txt

  deepseek-skip:
    if: ${{ secrets.DEEPSEEK_API_KEY == '' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "No DEEPSEEK_API_KEY set â€” skipping DeepSeek job (success)."
